// Generated by CoffeeScript 1.8.0
(function() {
  var colors, fail, failDetail, fs, initFiles, makeDir, runtasks, succeed, tasks, writeToFile, yellow;

  fs = require('fs');

  colors = require('colors');

  succeed = colors.green;

  fail = colors.red;

  yellow = colors.yellow;

  failDetail = function(err) {
    return console.log(fail("ERROR number: " + err['errno'] + ",ERROR code: " + err['code']));
  };

  makeDir = function(dir) {
    return fs.exists(dir, function(exists) {
      if (exists) {
        console.log(yellow("" + dir + " exists"));
      } else {
        return fs.mkdir(dir, function(err) {
          if (!err) {
            return console.log(succeed("Making directory " + dir + " succeed!"));
          } else {
            console.log(fail("Fail to make directory " + dir));
            return failDetail(err);
          }
        });
      }
    });
  };

  writeToFile = function(file, source) {
    return fs.readFile(source, function(err, data) {
      if (!err) {
        return fs.exists(file, function(exists) {
          if (exists) {
            console.log("" + file + " exists, return");
            return;
          }
          return fs.writeFile(file, data.toString(), function(err) {
            if (!err) {
              return console.log(succeed("Writing file " + file + " succeed"));
            } else {
              return console.log(fail("Fail to write file " + file));
            }
          });
        });
      } else {
        return console.log(fail("Fail to read data from file " + dir));
      }
    });
  };

  initFiles = function() {
    var archives, file, folder, _i, _j, _len, _len1, _ref, _ref1, _results;
    archives = {
      folders: ['images', 'styles', 'scripts'],
      files: ['styles/index.css', 'scripts/index.js', 'index.html']
    };
    _ref = archives['folders'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      folder = _ref[_i];
      makeDir(folder);
    }
    _ref1 = archives['files'];
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      file = _ref1[_j];
      _results.push(writeToFile(file, "" + __dirname + "/../f5data/" + file));
    }
    return _results;
  };

  tasks = [initFiles];

  runtasks = function() {
    var task, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = tasks.length; _i < _len; _i++) {
      task = tasks[_i];
      _results.push(task());
    }
    return _results;
  };

  exports.runtasks = runtasks;

}).call(this);
