// Generated by CoffeeScript 1.9.1
(function() {
  var fs, getHandler, path, picker, postHandler, querystring, url, util;

  fs = require('fs');

  path = require('path');

  url = require('url');

  util = require('./util');

  querystring = require('querystring');

  postHandler = function(req, res) {
    var action, pathname, querys, urlobj;
    urlobj = url.parse(req.url);
    pathname = urlobj.pathname;
    querys = querystring.parse(urlobj.query);
    action = querys.action;
    switch (action) {
      case 'pick':
        return picker(req, res);
    }
  };

  picker = function(req, res) {
    var text;
    text = '';
    req.on('data', function(chunk) {
      return text += chunk;
    });
    return req.on('end', function() {
      var file, files, i, len;
      console.log(text);
      files = querystring.parse(text)['sel'];
      if (!files) {
        res.write('No file packed');
        return;
      }
      if (!Array.isArray(files)) {
        files = new Array(files);
      }
      fs.rmdir('./f5picker/', function() {
        debugger;
      });
      res.write("<ul>");
      for (i = 0, len = files.length; i < len; i++) {
        file = files[i];
        debugger;
        util.cp2Folder('./f5picker/', './' + file, function(src, tg) {
          src = path.normalize(src);
          tg = path.normalize(tg);
          return res.write("<li>F5: copy <b>" + src + "</b> to <b>" + tg + "</b>!</li>");
        });
      }
      res.write("</ul>");
      return res.end();
    });
  };

  getHandler = function(req, res) {
    res.write('TODO: getHandler');
    return res.end();
  };

  exports.postHandler = postHandler;

  exports.getHandler = getHandler;

}).call(this);
